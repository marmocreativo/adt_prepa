{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/src/ts/file-tree.ts"],"names":[],"mappings":"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","file":"file-tree.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","class fileTree {\r\n    currentFolderId: string;\r\n    extTypes: object;\r\n    fileTypes: Array<string>;\r\n    foldersContent: Array<any>;\r\n    icons: any;\r\n    jsonTree: any;\r\n    options: any;\r\n    scriptSrc: string;\r\n    targetId: string;\r\n    template: any = null;\r\n\r\n    treeMarkup: string = '';\r\n\r\n    constructor(targetId: string, options: any = {}) {\r\n        this.targetId = targetId;\r\n\r\n        const defaults = {\r\n            connector: 'php',\r\n            // available modes: list | grid\r\n            explorerMode: 'list',\r\n            extensions: ['.*'],\r\n            mainDir: 'demo-files',\r\n            maxDeph: 3,\r\n            cancelBtn: true,\r\n            okBtn: true,\r\n            template: 'bootstrap4',\r\n            elementClick: function (filePath: string, fileName: string) {\r\n                console.log(filePath);\r\n                console.log(fileName);\r\n            },\r\n            cancelBtnClick: function () {\r\n                console.log('Cancel');\r\n            },\r\n            okBtnClick: function (filePath: string, fileName: string) {\r\n                console.log(filePath);\r\n                console.log(fileName);\r\n            }\r\n        };\r\n        this.options = Object.assign({}, defaults, options);\r\n\r\n        this.icons = {\r\n            archive: 'ft-icon-file-zip',\r\n            excel: 'ft-icon-file-excel',\r\n            folder: 'ft-icon-folder',\r\n            folderOpen: 'ft-icon-folder-open',\r\n            html: 'ft-icon-html-five2',\r\n            image: 'ft-icon-file-picture',\r\n            music: 'ft-icon-file-music',\r\n            openoffice: 'ft-icon-file-openoffice',\r\n            pdf: 'ft-icon-file-pdf',\r\n            text: 'ft-icon-file-text2',\r\n            video: 'ft-icon-file-video',\r\n            word: 'ft-icon-file-word',\r\n            default: 'ft-icon-file-empty'\r\n        };\r\n        this.foldersContent = new Array();\r\n        this.fileTypes = Object.keys(this.icons);\r\n        this.extTypes = {\r\n            archive: ['7z', '7-Zip', 'arj', 'deb', 'pkg', 'rar', 'rpm', 'tar.gz', 'z', 'zip'],\r\n            excel: ['xls', 'xlsx'],\r\n            html: ['htm', 'html'],\r\n            image: ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'svg', 'tif', 'tiff', 'webp'],\r\n            music: ['aif', 'mp3', 'mpa', 'ogg', 'wav', 'wma'],\r\n            openoffice: ['odt', 'ott', 'odm', 'ods', 'ots', 'odg', 'otg', 'odp', 'otp', 'odf', 'odc', 'odb'],\r\n            pdf: ['pdf'],\r\n            text: ['rtf', 'tex', 'txt'],\r\n            video: ['3g2', '3gp', 'avi', 'flv', 'h264', 'm4v', 'mkv', 'mov', 'mp4', 'mpg', 'rm', 'swf', 'vob', 'wmv'],\r\n            word: ['doc', 'docx']\r\n        }\r\n\r\n        this.scriptSrc = this.getScriptScr();\r\n\r\n        this.getFiles()\r\n        .then((data: string) => {\r\n            this.jsonTree = JSON.parse(data);\r\n            this.buildTree();\r\n            this.render();\r\n        })\r\n        .catch((err) => {\r\n            console.error('Augh, there was an error!', err.statusText);\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const $targetId = document.getElementById(this.targetId);\r\n        this.loadCss();\r\n        $targetId.querySelectorAll('.ft-tree')[0].innerHTML = this.treeMarkup;\r\n        const folders = $targetId.querySelectorAll('.ft-tree .ft-folder');\r\n        Array.prototype.forEach.call(folders, (el: HTMLElement, i: number) => {\r\n            el.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                // get all the parent folders\r\n                const parents = this.parentsUntil(el, 'ft-folder', 'ft-' + this.targetId + '-root');\r\n\r\n                // open all the parent folders, close the others\r\n                Array.prototype.forEach.call(folders, (folder: HTMLElement, i: number) => {\r\n                    const ic = folder.querySelector('i');\r\n                    if (parents.indexOf(folder) > -1) {\r\n                        folder.classList.add('ft-folder-open');\r\n                        ic.classList.remove(this.icons.folder);\r\n                        ic.classList.add(this.icons.folderOpen);\r\n                    } else {\r\n                        folder.classList.remove('ft-folder-open');\r\n                        ic.classList.add(this.icons.folder);\r\n                        ic.classList.remove(this.icons.folderOpen);\r\n                    }\r\n                });\r\n                this.currentFolderId = el.getAttribute('id');\r\n                this.loadFolder(this.currentFolderId);\r\n                return false;\r\n            });\r\n        });\r\n        // load the root folder explorer content\r\n        this.currentFolderId = 'ft-' + this.targetId + '-root';\r\n        this.loadFolder(this.currentFolderId);\r\n    }\r\n\r\n    /**\r\n    * Load js-tree + icon lib CSS\r\n    */\r\n    private loadCss() {\r\n        const ftIcons = document.getElementById('ft-icons');\r\n        if (ftIcons == undefined) {\r\n            const linkElement = document.createElement('link');\r\n            linkElement.setAttribute('id', 'ft-icons');\r\n            linkElement.setAttribute('rel', 'stylesheet');\r\n            linkElement.setAttribute('type', 'text/css');\r\n            linkElement.setAttribute('href', this.scriptSrc + 'icons/style.css');\r\n            document.getElementsByTagName('head')[0].appendChild(linkElement);\r\n        }\r\n        const ftCss = document.getElementById('ft-styles');\r\n        if (ftCss == undefined) {\r\n            const linkElement = document.createElement('link');\r\n            linkElement.setAttribute('id', 'ft-styles');\r\n            linkElement.setAttribute('rel', 'stylesheet');\r\n            linkElement.setAttribute('type', 'text/css');\r\n            linkElement.setAttribute('href', this.scriptSrc + 'templates/' + this.options.template + '.css');\r\n            document.getElementsByTagName('head')[0].appendChild(linkElement);\r\n        }\r\n    }\r\n\r\n    private buildFolderContent(jst: Array<string> = this.jsonTree, url: string, deph: number) {\r\n        const folderContent: any = {\r\n            folders: [],\r\n            files: []\r\n        }\r\n        for (let key in jst) {\r\n            let value: any = jst[key];\r\n            if (isNaN(parseInt(key))) {\r\n                // directory\r\n                folderContent.folders.push({\r\n                    dataRefId: key + '-' + (deph + 1).toString(),\r\n                    name: key,\r\n                    url: url + key + '/'\r\n                });\r\n            } else {\r\n                // file\r\n                const filedata = value;\r\n                Object.assign(filedata, { type: this.getFileType(filedata.ext) });\r\n                const icon: string = this.icons[filedata.type];\r\n                if (filedata.type === 'image') {\r\n                    folderContent.files.push({\r\n                        name: filedata.name,\r\n                        icon: icon,\r\n                        type: filedata.type,\r\n                        url: url + filedata.name,\r\n                        width: null,\r\n                        height: null\r\n                    });\r\n                } else {\r\n                    folderContent.files.push({\r\n                        name: filedata.name,\r\n                        icon: icon,\r\n                        size: filedata.size,\r\n                        type: filedata.type,\r\n                        url: url + filedata.name\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return folderContent;\r\n    }\r\n\r\n    private buildTree(jst: Array<string> = this.jsonTree, url: string = this.options.mainDir + '/', deph: number = 0) {\r\n        if (deph === 0) {\r\n            const rootId: any = 'ft-' + this.targetId + '-root';\r\n            this.treeMarkup += `<ul><li id=\"${rootId}\" class=\"ft-folder ft-folder-open\"><i class=\"${this.icons.folderOpen}\"></i><a href=\"#\" data-url=\"${url}\">root</a>`;\r\n            this.foldersContent[rootId] = this.buildFolderContent(this.jsonTree, url, deph);\r\n            deph += 1;\r\n        }\r\n        for (let key in jst) {\r\n            let jsonSubTree: any = jst[key];\r\n            if (isNaN(parseInt(key))) {\r\n                // directory\r\n                const folderId: any = key + '-' + deph.toString();\r\n\r\n                this.foldersContent[folderId] = this.buildFolderContent(jsonSubTree, url + key + '/', deph);\r\n                this.treeMarkup += `<ul><li id=\"${folderId}\" class=\"ft-folder\"><i class=\"${this.icons.folder}\"></i><a href=\"#\" data-url=\"${url + key}\">${key}</a>`;\r\n                if (deph < this.options.maxDeph) {\r\n                    this.buildTree(jsonSubTree, url + key + '/', deph + 1);\r\n                }\r\n                this.treeMarkup += `</li></ul>`;\r\n            }\r\n        }\r\n        if (deph === 0) {\r\n            this.treeMarkup += `</li></ul>`;\r\n        }\r\n    }\r\n\r\n    private getFileType(ext: string) {\r\n        const x: any = this.extTypes;\r\n        for (let key in x) {\r\n            let value: any = x[key];\r\n            if (value.indexOf(ext) !== -1) {\r\n\r\n                return key;\r\n            }\r\n        }\r\n\r\n        return 'default';\r\n    }\r\n\r\n    private getFiles() {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('POST', this.scriptSrc + 'connectors/connector.' + this.options.connector, true);\r\n            xhr.onload = function () {\r\n                // console.log(xhr.response);\r\n                if (this.status >= 200 && this.status < 300) {\r\n                    resolve(xhr.response);\r\n                } else {\r\n                    reject({\r\n                        status: this.status,\r\n                        statusText: xhr.statusText\r\n                    });\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            };\r\n            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n            xhr.send('dir=' + encodeURI(this.options.mainDir) + '&ext=' + JSON.stringify(this.options.extensions));\r\n        });\r\n    }\r\n\r\n    private getScriptScr() {\r\n        const sc = document.getElementsByTagName(\"script\");\r\n\r\n        for (let idx = 0; idx < sc.length; idx++) {\r\n            const s = sc.item(idx);\r\n\r\n            if (s.src && s.src.match(/file-tree(\\.min)?\\.js$/)) {\r\n                return s.src.replace(/js\\/file-tree(\\.min)?\\.js$/, '');\r\n            }\r\n        }\r\n    }\r\n\r\n    private humanFileSize(bytes: number, si: boolean) {\r\n        var thresh = si ? 1000 : 1024;\r\n        if(Math.abs(bytes) < thresh) {\r\n            return bytes + ' B';\r\n        }\r\n        var units = si\r\n            ? ['kB','MB','GB','TB','PB','EB','ZB','YB']\r\n            : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\r\n        var u = -1;\r\n        do {\r\n            bytes /= thresh;\r\n            ++u;\r\n        } while(Math.abs(bytes) >= thresh && u < units.length - 1);\r\n        return bytes.toFixed(1)+' '+units[u];\r\n    }\r\n\r\n    private loadFolder(folderId: any) {\r\n        const $targetId = document.getElementById(this.targetId);\r\n        const folderContent = this.foldersContent[folderId];\r\n        let clone: any;\r\n        let output: any;\r\n        this.loadTemplates().then((template: any) => {\r\n            this.template = template;\r\n            const folders = folderContent.folders;\r\n            const files = folderContent.files;\r\n\r\n            let explorerContainer: HTMLTemplateElement;\r\n            let explorerFile: HTMLTemplateElement;\r\n            let explorerFolder: HTMLTemplateElement;\r\n            let explorerImage: HTMLTemplateElement;\r\n            let explorerActionBtns: HTMLTemplateElement;\r\n            let explorerMode: HTMLTemplateElement;\r\n\r\n            explorerActionBtns = document.querySelector('#explorer-action-btns');\r\n            const explorerActionBtnsClone = explorerActionBtns.content.cloneNode(true);\r\n\r\n            explorerMode = document.querySelector('#explorer-mode');\r\n            const explorerModeClone = explorerMode.content.cloneNode(true);\r\n\r\n            switch (this.options.explorerMode) {\r\n                case 'list':\r\n                explorerContainer = document.querySelector('#explorer-list');\r\n                explorerFile = document.querySelector('#explorer-list-file');\r\n                explorerFolder = document.querySelector('#explorer-list-folder');\r\n                explorerImage = document.querySelector('#explorer-list-image');\r\n                output = explorerContainer.content.querySelector('.ft-explorer-list-container').cloneNode(true);\r\n\r\n                break;\r\n\r\n                case 'grid':\r\n                explorerContainer = document.querySelector('#explorer-grid');\r\n                explorerFile = document.querySelector('#explorer-grid-file');\r\n                explorerFolder = document.querySelector('#explorer-grid-folder');\r\n                explorerImage = document.querySelector('#explorer-grid-image');\r\n                output = explorerContainer.content.querySelector('.ft-explorer-grid-container').cloneNode(true);\r\n\r\n                break;\r\n\r\n                default:\r\n                break;\r\n            }\r\n\r\n            for (let key in folders) {\r\n                let folder: any = folders[key];\r\n                clone = explorerFolder.content.cloneNode(true);\r\n                clone.querySelector('.ft-folder').setAttribute('data-href', folder.dataRefId);\r\n                clone.querySelector('.ft-folder i').classList.add(this.icons.folder);\r\n                clone.querySelector('.ft-foldername').innerHTML = folder.name;\r\n                output.appendChild(clone);\r\n            }\r\n\r\n            for (let key in files) {\r\n                let file: any = files[key];\r\n                if (file.type === 'image') {\r\n                    let cloneId = Math.random().toString(36).substr(2, 9);\r\n                    clone = explorerImage.content.cloneNode(true);\r\n                    clone.querySelector('.ft-imagedesc').setAttribute('id', cloneId);\r\n                    clone.querySelector('.ft-image').setAttribute('data-href', file.url);\r\n                    clone.querySelector('.ft-image').setAttribute('data-filename', file.name);\r\n                    clone.querySelector('.ft-image img').setAttribute('src', file.url);\r\n                    clone.querySelector('.ft-imagename').innerHTML = file.name;\r\n                    output.appendChild(clone);\r\n                    let img = new Image();\r\n                    img.src = file.url;\r\n                    img.onload = () => {\r\n                        let el:HTMLElement = document.getElementById(cloneId);\r\n                        el.querySelector('.ft-image-size').innerHTML = img.width.toString() + 'x' + img.height.toString() + 'px';\r\n                    };\r\n                } else {\r\n                    clone = explorerFile.content.cloneNode(true);\r\n                    clone.querySelector('.ft-file').setAttribute('data-href', file.url);\r\n                    clone.querySelector('.ft-file').setAttribute('data-filename', file.name);\r\n                    clone.querySelector('.ft-file i').classList.add(file.icon);\r\n                    clone.querySelector('.ft-filename').innerHTML = file.name;\r\n                    clone.querySelector('.ft-filesize').innerHTML = this.humanFileSize(file.size, true);\r\n                    output.appendChild(clone);\r\n                }\r\n            }\r\n            $targetId.querySelector('.ft-explorer').innerHTML = '';\r\n            $targetId.querySelector('.ft-explorer').appendChild(explorerModeClone);\r\n            $targetId.querySelector('.ft-explorer').appendChild(output);\r\n            if (this.options.okBtn === true || this.options.cancelBtn === true) {\r\n                $targetId.querySelector('.ft-explorer').appendChild(explorerActionBtnsClone);\r\n                if (this.options.okBtn !== true) {\r\n                    $targetId.querySelector('.explorer-ok-btn').remove();\r\n                }\r\n                if (this.options.cancelBtn !== true) {\r\n                    $targetId.querySelector('.explorer-cancel-btn').remove();\r\n                }\r\n                if (this.options.okBtn === true) {\r\n                    $targetId.querySelector('.explorer-ok-btn').addEventListener('click', (e: any) => {\r\n                        e.preventDefault();\r\n                        const target: any = $targetId.querySelector('.ft-file-container.active a');\r\n                        if (target !== null) {\r\n                            const targetFilename = target.getAttribute('data-filename');\r\n                            const targetHref = target.getAttribute('data-href');\r\n                            this.options.okBtnClick(targetHref, targetFilename);\r\n                        } else {\r\n                            alert('Nothing selected');\r\n                        }\r\n\r\n                        return false;\r\n                    }, false);\r\n                }\r\n                if (this.options.cancelBtn === true) {\r\n                    $targetId.querySelector('.explorer-cancel-btn').addEventListener('click', (e: any) => {\r\n                        e.preventDefault();\r\n                        this.options.cancelBtnClick();\r\n\r\n                        return false;\r\n                    }, false);\r\n                }\r\n            }\r\n\r\n            const modeBtns = Array.from($targetId.querySelectorAll('.ft-explorer-mode .explorer-mode-btn'));\r\n\r\n            /* add explorer mode buttons events & activate the current btn */\r\n\r\n            modeBtns.forEach(m => {\r\n                if (m.getAttribute('value') === this.options.explorerMode) {\r\n                    m.classList.add('active');\r\n                }\r\n                m.addEventListener('click', (e: any) => {\r\n                    this.switchMode();\r\n                    this.loadFolder(folderId);\r\n                });\r\n            });\r\n\r\n            /* add explorer elements events */\r\n\r\n            const elements = Array.from($targetId.querySelectorAll('.ft-explorer a[data-href]'));\r\n            const elementContainers = Array.from($targetId.querySelectorAll('.ft-explorer .ft-file-container'));\r\n            elements.forEach(el => {\r\n                el.addEventListener('click', (e: any) => {\r\n                    e.preventDefault();\r\n                    elementContainers.forEach(elContainer => {\r\n                        elContainer.classList.remove('active');\r\n                    });\r\n                    const target: any = e.target.closest('a');\r\n                    if (target.closest('.ft-file-container') !== null) {\r\n                        target.closest('.ft-file-container').classList.add('active');\r\n                        const targetFilename = target.getAttribute('data-filename');\r\n                        const targetHref = target.getAttribute('data-href');\r\n                        this.options.elementClick(targetHref, targetFilename);\r\n                    }\r\n\r\n                    return false;\r\n                }, false);\r\n            });\r\n\r\n            /* add explorer folder events */\r\n            const links = Array.from($targetId.querySelectorAll('.ft-explorer a.ft-folder'));\r\n            links.forEach(l => {\r\n                l.addEventListener('click', (e: any) => {\r\n                    e.preventDefault();\r\n                    const target: any = e.target.closest('a');\r\n                    const targetId = target.getAttribute('data-href');\r\n                    if (targetId !== null) {\r\n                        var event = document.createEvent('HTMLEvents');\r\n                        event.initEvent('click', true, false);\r\n                        document.getElementById(targetId).dispatchEvent(event);\r\n                    }\r\n\r\n                    return false;\r\n                }, false);\r\n            });\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.error('Augh, there was an error!', err.statusText);\r\n        });\r\n    }\r\n\r\n    private loadTemplates() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.template !== null) {\r\n                resolve(this.template);\r\n            } else {\r\n                const ftMode = this.options.explorerMode;\r\n                let xhr = new XMLHttpRequest();\r\n                xhr.open('GET', this.scriptSrc + 'templates/' + this.options.template + '.html', true);\r\n                xhr.onload = function () {\r\n                    // console.log(xhr.response);\r\n                    if (this.status >= 200 && this.status < 300) {\r\n                        if (document.querySelectorAll('#explorer-' + ftMode).length < 1) {\r\n                            const div = document.createElement('div');\r\n                            div.innerHTML = xhr.response;\r\n                            while (div.children.length > 0) {\r\n                                document.body.appendChild(div.children[0]);\r\n                            }\r\n                        }\r\n                        resolve(xhr.response);\r\n                    } else {\r\n                        reject({\r\n                            status: this.status,\r\n                            statusText: xhr.statusText\r\n                        });\r\n                    }\r\n                };\r\n                xhr.onerror = function () {\r\n                    reject({\r\n                        status: this.status,\r\n                        statusText: xhr.statusText\r\n                    });\r\n                };\r\n                xhr.send();\r\n            }\r\n        });\r\n    }\r\n\r\n    private parentsUntil(el: any, searchClass: string, stopElementId: string) {\r\n        const Parents = new Array();\r\n        while (el.parentNode) {\r\n            if (el.classList.contains(searchClass)) {\r\n                Parents.push(el);\r\n            }\r\n            el = el.parentNode;\r\n            if (el.id === stopElementId) {\r\n                Parents.push(el);\r\n                return Parents;\r\n            }\r\n        }\r\n        return Parents;\r\n    }\r\n\r\n    private switchMode() {\r\n        if (this.options.explorerMode === 'list') {\r\n            this.options.explorerMode = 'grid';\r\n        } else {\r\n            this.options.explorerMode = 'list';\r\n        }\r\n    }\r\n}\r\n\r\nObject.assign(window, { fileTree });\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}